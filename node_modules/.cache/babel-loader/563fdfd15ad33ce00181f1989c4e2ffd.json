{"ast":null,"code":"import _objectSpread from\"C:/Users/HP/Desktop/React App/theFront-v3.2.2/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"C:/Users/HP/Desktop/React App/theFront-v3.2.2/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";var _excluded=[\"title\",\"subtitle\",\"primaryCta\",\"secondaryCta\",\"align\",\"className\",\"wrapperProps\",\"titleProps\",\"subtitleProps\",\"buttonGroupProps\",\"primaryButtonWrapperProps\",\"secondaryButtonWrapperProps\"];import React from'react';import clsx from'clsx';import{useTheme}from'@material-ui/core/styles';import{useMediaQuery,Grid,Typography}from'@material-ui/core';/**\n * Component to display the description with CTA's\n *\n * @param {Object} props\n */import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var DescriptionCta=function DescriptionCta(props){var title=props.title,subtitle=props.subtitle,primaryCta=props.primaryCta,secondaryCta=props.secondaryCta,align=props.align,className=props.className,wrapperProps=props.wrapperProps,titleProps=props.titleProps,subtitleProps=props.subtitleProps,buttonGroupProps=props.buttonGroupProps,primaryButtonWrapperProps=props.primaryButtonWrapperProps,secondaryButtonWrapperProps=props.secondaryButtonWrapperProps,rest=_objectWithoutProperties(props,_excluded);var theme=useTheme();var isSm=useMediaQuery(theme.breakpoints.up('sm'),{defaultMatches:true});var justifyGrid='center';if(align==='left'){justifyGrid=isSm?'flex-end':'flex-start';}else if(align==='right'){justifyGrid=isSm?'flex-start':'flex-end';}return/*#__PURE__*/_jsxs(Grid,_objectSpread(_objectSpread({container:true,spacing:2,justify:\"space-between\",alignItems:\"center\",className:clsx('description-cta',className)},rest),{},{children:[/*#__PURE__*/_jsxs(Grid,_objectSpread(_objectSpread({item:true,className:\"description-cta__wrapper\"},wrapperProps),{},{children:[/*#__PURE__*/_jsx(Typography,_objectSpread(_objectSpread({variant:\"h5\",align:align,gutterBottom:true,className:\"description-cta__title\"},titleProps),{},{children:title})),subtitle&&/*#__PURE__*/_jsx(Typography,_objectSpread(_objectSpread({variant:\"subtitle1\",align:align,color:\"textSecondary\",className:\"description-cta__subtitle\"},subtitleProps),{},{children:subtitle}))]})),/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsxs(Grid,_objectSpread(_objectSpread({container:true,justify:justifyGrid,spacing:1,className:\"description-cta__button-group\"},buttonGroupProps),{},{children:[/*#__PURE__*/_jsx(Grid,_objectSpread(_objectSpread({item:true,className:\"description-cta__primary-button-wrapper\"},primaryButtonWrapperProps),{},{children:primaryCta})),secondaryCta&&/*#__PURE__*/_jsx(Grid,_objectSpread(_objectSpread({item:true,className:clsx('description-cta__secondary-button-wrapper')},secondaryButtonWrapperProps),{},{children:secondaryCta}))]}))})]}));};DescriptionCta.defaultProps={align:'center',wrapperProps:{},titleProps:{},subtitleProps:{},buttonGroupProps:{},primaryButtonWrapperProps:{},secondaryButtonWrapperProps:{}};export default DescriptionCta;","map":{"version":3,"sources":["C:/Users/HP/Desktop/React App/theFront-v3.2.2/react-scripts/src/components/molecules/DescriptionCta/DescriptionCta.js"],"names":["React","clsx","useTheme","useMediaQuery","Grid","Typography","DescriptionCta","props","title","subtitle","primaryCta","secondaryCta","align","className","wrapperProps","titleProps","subtitleProps","buttonGroupProps","primaryButtonWrapperProps","secondaryButtonWrapperProps","rest","theme","isSm","breakpoints","up","defaultMatches","justifyGrid","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { useTheme } from '@material-ui/core/styles';\nimport { useMediaQuery, Grid, Typography } from '@material-ui/core';\n\n/**\n * Component to display the description with CTA's\n *\n * @param {Object} props\n */\nconst DescriptionCta = props => {\n  const {\n    title,\n    subtitle,\n    primaryCta,\n    secondaryCta,\n    align,\n    className,\n    wrapperProps,\n    titleProps,\n    subtitleProps,\n    buttonGroupProps,\n    primaryButtonWrapperProps,\n    secondaryButtonWrapperProps,\n    ...rest\n  } = props;\n\n  const theme = useTheme();\n  const isSm = useMediaQuery(theme.breakpoints.up('sm'), {\n    defaultMatches: true,\n  });\n\n  let justifyGrid = 'center';\n  if (align === 'left') {\n    justifyGrid = isSm ? 'flex-end' : 'flex-start';\n  } else if (align === 'right') {\n    justifyGrid = isSm ? 'flex-start' : 'flex-end';\n  }\n\n  return (\n    <Grid\n      container\n      spacing={2}\n      justify=\"space-between\"\n      alignItems=\"center\"\n      className={clsx('description-cta', className)}\n      {...rest}\n    >\n      <Grid item className=\"description-cta__wrapper\" {...wrapperProps}>\n        <Typography\n          variant=\"h5\"\n          align={align}\n          gutterBottom\n          className=\"description-cta__title\"\n          {...titleProps}\n        >\n          {title}\n        </Typography>\n        {subtitle && (\n          <Typography\n            variant=\"subtitle1\"\n            align={align}\n            color=\"textSecondary\"\n            className=\"description-cta__subtitle\"\n            {...subtitleProps}\n          >\n            {subtitle}\n          </Typography>\n        )}\n      </Grid>\n      <Grid item>\n        <Grid\n          container\n          justify={justifyGrid}\n          spacing={1}\n          className=\"description-cta__button-group\"\n          {...buttonGroupProps}\n        >\n          <Grid\n            item\n            className=\"description-cta__primary-button-wrapper\"\n            {...primaryButtonWrapperProps}\n          >\n            {primaryCta}\n          </Grid>\n          {secondaryCta && (\n            <Grid\n              item\n              className={clsx('description-cta__secondary-button-wrapper')}\n              {...secondaryButtonWrapperProps}\n            >\n              {secondaryCta}\n            </Grid>\n          )}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nDescriptionCta.defaultProps = {\n  align: 'center',\n  wrapperProps: {},\n  titleProps: {},\n  subtitleProps: {},\n  buttonGroupProps: {},\n  primaryButtonWrapperProps: {},\n  secondaryButtonWrapperProps: {},\n};\n\nDescriptionCta.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n  /**\n   * Title of the list\n   */\n  title: PropTypes.string.isRequired,\n  /**\n   * Subtitle of the list\n   */\n  subtitle: PropTypes.string,\n  /**\n   * Primary CTA of the list\n   */\n  primaryCta: PropTypes.node.isRequired,\n  /**\n   * Secondary CTA of the list\n   */\n  secondaryCta: PropTypes.node,\n  /**\n   * Alignment\n   */\n  align: PropTypes.oneOf(['left', 'right', 'center']),\n  /**\n   * Additional properties to pass to the wrapper Grid item components\n   */\n  wrapperProps: PropTypes.object,\n  /**\n   * Additional properties to pass to the title Typography components\n   */\n  titleProps: PropTypes.object,\n  /**\n   * Additional properties to pass to the subtitle Typography components\n   */\n  subtitleProps: PropTypes.object,\n  /**\n   * Additional properties to pass to the button group div container\n   */\n  buttonGroupProps: PropTypes.object,\n  /**\n   * Additional properties to pass to the primary button wrapper div container\n   */\n  primaryButtonWrapperProps: PropTypes.object,\n  /**\n   * Additional properties to pass to the secondary button wrapper div container\n   */\n  secondaryButtonWrapperProps: PropTypes.object,\n};\n\nexport default DescriptionCta;\n"]},"metadata":{},"sourceType":"module"}