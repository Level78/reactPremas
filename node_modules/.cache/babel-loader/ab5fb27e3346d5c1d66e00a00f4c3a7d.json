{"ast":null,"code":"import _objectSpread from\"C:/Users/HP/Desktop/React App/theFront-v3.2.2/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:/Users/HP/Desktop/React App/theFront-v3.2.2/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"C:/Users/HP/Desktop/React App/theFront-v3.2.2/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";var _excluded=[\"start\",\"end\",\"suffix\",\"prefix\",\"label\",\"textColor\",\"labelColor\",\"className\",\"visibilitySensorProps\",\"wrapperProps\",\"countWrapperProps\",\"countNumberProps\",\"labelProps\"];import React from'react';import VisibilitySensor from'react-visibility-sensor';import CountUp from'react-countup';import clsx from'clsx';import{Typography}from'@material-ui/core';/**\n * Component to display the Count Up Numbers\n *\n * @param {Object} props\n */import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CountUpNumber=function CountUpNumber(props){var start=props.start,end=props.end,suffix=props.suffix,prefix=props.prefix,label=props.label,textColor=props.textColor,labelColor=props.labelColor,className=props.className,visibilitySensorProps=props.visibilitySensorProps,wrapperProps=props.wrapperProps,countWrapperProps=props.countWrapperProps,countNumberProps=props.countNumberProps,labelProps=props.labelProps,rest=_objectWithoutProperties(props,_excluded);var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),viewPortEntered=_React$useState2[0],setViewPortEntered=_React$useState2[1];var setViewPortVisibility=function setViewPortVisibility(isVisible){if(viewPortEntered){return;}setViewPortEntered(isVisible);};return/*#__PURE__*/_jsx(\"div\",_objectSpread(_objectSpread({className:clsx('countup-number',className)},rest),{},{children:/*#__PURE__*/_jsx(VisibilitySensor,_objectSpread(_objectSpread({onChange:function onChange(isVisible){return setViewPortVisibility(isVisible);},delayedCall:true},visibilitySensorProps),{},{children:/*#__PURE__*/_jsxs(\"div\",_objectSpread(_objectSpread({className:\"countup-number__wrapper\"},wrapperProps),{},{children:[/*#__PURE__*/_jsx(Typography,_objectSpread(_objectSpread({variant:\"h4\",gutterBottom:true,align:\"center\",color:textColor||'textPrimary',className:\"countup-number__count-wrapper\"},countWrapperProps),{},{children:/*#__PURE__*/_jsx(CountUp,_objectSpread({delay:1,redraw:false,end:viewPortEntered?end:start,start:start,suffix:suffix||'',prefix:prefix||'',className:\"countup-number__count\"},countNumberProps))})),/*#__PURE__*/_jsx(Typography,_objectSpread(_objectSpread({variant:\"subtitle1\",color:labelColor||'textSecondary',align:\"center\",className:\"countup-number__label\"},labelProps),{},{children:label}))]}))}))}));};CountUpNumber.defaultProps={start:0,visibilitySensorProps:{},wrapperProps:{},countWrapperProps:{},countNumberProps:{},labelProps:{}};export default CountUpNumber;","map":{"version":3,"sources":["C:/Users/HP/Desktop/React App/theFront-v3.2.2/react-scripts/src/components/molecules/CountUpNumber/CountUpNumber.js"],"names":["React","VisibilitySensor","CountUp","clsx","Typography","CountUpNumber","props","start","end","suffix","prefix","label","textColor","labelColor","className","visibilitySensorProps","wrapperProps","countWrapperProps","countNumberProps","labelProps","rest","useState","viewPortEntered","setViewPortEntered","setViewPortVisibility","isVisible","defaultProps"],"mappings":"iuBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,yBAA7B,CACA,MAAOC,CAAAA,OAAP,KAAoB,eAApB,CACA,MAAOC,CAAAA,IAAP,KAAiB,MAAjB,CAEA,OAASC,UAAT,KAA2B,mBAA3B,CAEA;AACA;AACA;AACA;AACA,G,wFACA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,KAAK,CAAI,CAC7B,GACEC,CAAAA,KADF,CAeID,KAfJ,CACEC,KADF,CAEEC,GAFF,CAeIF,KAfJ,CAEEE,GAFF,CAGEC,MAHF,CAeIH,KAfJ,CAGEG,MAHF,CAIEC,MAJF,CAeIJ,KAfJ,CAIEI,MAJF,CAKEC,KALF,CAeIL,KAfJ,CAKEK,KALF,CAMEC,SANF,CAeIN,KAfJ,CAMEM,SANF,CAOEC,UAPF,CAeIP,KAfJ,CAOEO,UAPF,CAQEC,SARF,CAeIR,KAfJ,CAQEQ,SARF,CASEC,qBATF,CAeIT,KAfJ,CASES,qBATF,CAUEC,YAVF,CAeIV,KAfJ,CAUEU,YAVF,CAWEC,iBAXF,CAeIX,KAfJ,CAWEW,iBAXF,CAYEC,gBAZF,CAeIZ,KAfJ,CAYEY,gBAZF,CAaEC,UAbF,CAeIb,KAfJ,CAaEa,UAbF,CAcKC,IAdL,0BAeId,KAfJ,YAiBA,oBAA8CN,KAAK,CAACqB,QAAN,CAAe,KAAf,CAA9C,oDAAOC,eAAP,qBAAwBC,kBAAxB,qBACA,GAAMC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAAAC,SAAS,CAAI,CACzC,GAAIH,eAAJ,CAAqB,CACnB,OACD,CAEDC,kBAAkB,CAACE,SAAD,CAAlB,CACD,CAND,CAQA,mBACE,wCAAK,SAAS,CAAEtB,IAAI,CAAC,gBAAD,CAAmBW,SAAnB,CAApB,EAAuDM,IAAvD,4BACE,KAAC,gBAAD,8BACE,QAAQ,CAAE,kBAAAK,SAAS,QAAID,CAAAA,qBAAqB,CAACC,SAAD,CAAzB,EADrB,CAEE,WAAW,KAFb,EAGMV,qBAHN,4BAKE,yCAAK,SAAS,CAAC,yBAAf,EAA6CC,YAA7C,6BACE,KAAC,UAAD,8BACE,OAAO,CAAC,IADV,CAEE,YAAY,KAFd,CAGE,KAAK,CAAC,QAHR,CAIE,KAAK,CAAEJ,SAAS,EAAI,aAJtB,CAKE,SAAS,CAAC,+BALZ,EAMMK,iBANN,4BAQE,KAAC,OAAD,gBACE,KAAK,CAAE,CADT,CAEE,MAAM,CAAE,KAFV,CAGE,GAAG,CAAEK,eAAe,CAAGd,GAAH,CAASD,KAH/B,CAIE,KAAK,CAAEA,KAJT,CAKE,MAAM,CAAEE,MAAM,EAAI,EALpB,CAME,MAAM,CAAEC,MAAM,EAAI,EANpB,CAOE,SAAS,CAAC,uBAPZ,EAQMQ,gBARN,EARF,GADF,cAoBE,KAAC,UAAD,8BACE,OAAO,CAAC,WADV,CAEE,KAAK,CAAEL,UAAU,EAAI,eAFvB,CAGE,KAAK,CAAC,QAHR,CAIE,SAAS,CAAC,uBAJZ,EAKMM,UALN,eAOGR,KAPH,GApBF,IALF,GADF,GADF,CAwCD,CAnED,CAqEAN,aAAa,CAACqB,YAAd,CAA6B,CAC3BnB,KAAK,CAAE,CADoB,CAE3BQ,qBAAqB,CAAE,EAFI,CAG3BC,YAAY,CAAE,EAHa,CAI3BC,iBAAiB,CAAE,EAJQ,CAK3BC,gBAAgB,CAAE,EALS,CAM3BC,UAAU,CAAE,EANe,CAA7B,CAgEA,cAAed,CAAAA,aAAf","sourcesContent":["import React from 'react';\nimport VisibilitySensor from 'react-visibility-sensor';\nimport CountUp from 'react-countup';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Typography } from '@material-ui/core';\n\n/**\n * Component to display the Count Up Numbers\n *\n * @param {Object} props\n */\nconst CountUpNumber = props => {\n  const {\n    start,\n    end,\n    suffix,\n    prefix,\n    label,\n    textColor,\n    labelColor,\n    className,\n    visibilitySensorProps,\n    wrapperProps,\n    countWrapperProps,\n    countNumberProps,\n    labelProps,\n    ...rest\n  } = props;\n\n  const [viewPortEntered, setViewPortEntered] = React.useState(false);\n  const setViewPortVisibility = isVisible => {\n    if (viewPortEntered) {\n      return;\n    }\n\n    setViewPortEntered(isVisible);\n  };\n\n  return (\n    <div className={clsx('countup-number', className)} {...rest}>\n      <VisibilitySensor\n        onChange={isVisible => setViewPortVisibility(isVisible)}\n        delayedCall\n        {...visibilitySensorProps}\n      >\n        <div className=\"countup-number__wrapper\" {...wrapperProps}>\n          <Typography\n            variant=\"h4\"\n            gutterBottom\n            align=\"center\"\n            color={textColor || 'textPrimary'}\n            className=\"countup-number__count-wrapper\"\n            {...countWrapperProps}\n          >\n            <CountUp\n              delay={1}\n              redraw={false}\n              end={viewPortEntered ? end : start}\n              start={start}\n              suffix={suffix || ''}\n              prefix={prefix || ''}\n              className=\"countup-number__count\"\n              {...countNumberProps}\n            />\n          </Typography>\n          <Typography\n            variant=\"subtitle1\"\n            color={labelColor || 'textSecondary'}\n            align=\"center\"\n            className=\"countup-number__label\"\n            {...labelProps}\n          >\n            {label}\n          </Typography>\n        </div>\n      </VisibilitySensor>\n    </div>\n  );\n};\n\nCountUpNumber.defaultProps = {\n  start: 0,\n  visibilitySensorProps: {},\n  wrapperProps: {},\n  countWrapperProps: {},\n  countNumberProps: {},\n  labelProps: {},\n};\n\nCountUpNumber.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n  /**\n   * The Suffix of the count up number\n   */\n  suffix: PropTypes.string,\n  /**\n   * The Prefix of the count up number\n   */\n  prefix: PropTypes.string,\n  /**\n   * The label text of the count up number\n   */\n  label: PropTypes.string.isRequired,\n  /**\n   * Starting number\n   */\n  start: PropTypes.number,\n  /**\n   * End number\n   */\n  end: PropTypes.number.isRequired,\n  /**\n   * Text color\n   */\n  textColor: PropTypes.string,\n  /**\n   * Label color\n   */\n  labelColor: PropTypes.string,\n  /**\n   * Additional properties to pass to the VisibilitySensor Component\n   */\n  visibilitySensorProps: PropTypes.object,\n  /**\n   * Additional properties to pass to the wrapper div\n   */\n  wrapperProps: PropTypes.object,\n  /**\n   * Additional properties to pass to the count wrapper Typography component\n   */\n  countWrapperProps: PropTypes.object,\n  /**\n   * Additional properties to pass to the CountUp React component\n   */\n  countNumberProps: PropTypes.object,\n  /**\n   * Additional properties to pass to the label Typography component\n   */\n  labelProps: PropTypes.object,\n};\n\nexport default CountUpNumber;\n"]},"metadata":{},"sourceType":"module"}