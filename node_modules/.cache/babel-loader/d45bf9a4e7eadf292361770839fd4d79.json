{"ast":null,"code":"import _objectSpread from\"C:/Users/HP/Desktop/React App/theFront-v3.2.2/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"C:/Users/HP/Desktop/React App/theFront-v3.2.2/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";var _excluded=[\"title\",\"color\",\"fontIconClass\",\"className\",\"iconProps\",\"typographyProps\"];import React from'react';import clsx from'clsx';import{makeStyles}from'@material-ui/core/styles';import{Typography}from'@material-ui/core';import{Icon}from'components/atoms';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=makeStyles(function(theme){return{root:{display:'inline-flex',flexWrap:'nowrap',alignItems:'center',width:'100%'},title:{marginLeft:theme.spacing(1)}};});/**\n * Component to display the icon text\n *\n * @param {Object} props\n */var IconText=function IconText(props){var title=props.title,color=props.color,fontIconClass=props.fontIconClass,className=props.className,iconProps=props.iconProps,typographyProps=props.typographyProps,rest=_objectWithoutProperties(props,_excluded);var classes=useStyles();return/*#__PURE__*/_jsxs(\"div\",_objectSpread(_objectSpread({className:clsx('icon-text',classes.root,className)},rest),{},{children:[/*#__PURE__*/_jsx(Icon,_objectSpread({className:\"icon-text__icon\",size:\"small\",fontIconClass:fontIconClass,fontIconColor:color},iconProps)),/*#__PURE__*/_jsx(Typography,_objectSpread(_objectSpread({noWrap:true,variant:\"subtitle1\",color:\"textPrimary\",className:clsx('icon-text__typography',classes.title)},typographyProps),{},{children:title}))]}));};IconText.defaultProps={iconProps:{},typographyProps:{}};export default IconText;","map":{"version":3,"sources":["C:/Users/HP/Desktop/React App/theFront-v3.2.2/react-scripts/src/components/atoms/IconText/IconText.js"],"names":["React","clsx","makeStyles","Typography","Icon","useStyles","theme","root","display","flexWrap","alignItems","width","title","marginLeft","spacing","IconText","props","color","fontIconClass","className","iconProps","typographyProps","rest","classes","defaultProps"],"mappings":"idAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,IAAP,KAAiB,MAAjB,CAEA,OAASC,UAAT,KAA2B,0BAA3B,CACA,OAASC,UAAT,KAA2B,mBAA3B,CACA,OAASC,IAAT,KAAqB,kBAArB,C,wFAEA,GAAMC,CAAAA,SAAS,CAAGH,UAAU,CAAC,SAAAI,KAAK,QAAK,CACrCC,IAAI,CAAE,CACJC,OAAO,CAAE,aADL,CAEJC,QAAQ,CAAE,QAFN,CAGJC,UAAU,CAAE,QAHR,CAIJC,KAAK,CAAE,MAJH,CAD+B,CAOrCC,KAAK,CAAE,CACLC,UAAU,CAAEP,KAAK,CAACQ,OAAN,CAAc,CAAd,CADP,CAP8B,CAAL,EAAN,CAA5B,CAYA;AACA;AACA;AACA;AACA,GACA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAC,KAAK,CAAI,CACxB,GACEJ,CAAAA,KADF,CAQII,KARJ,CACEJ,KADF,CAEEK,KAFF,CAQID,KARJ,CAEEC,KAFF,CAGEC,aAHF,CAQIF,KARJ,CAGEE,aAHF,CAIEC,SAJF,CAQIH,KARJ,CAIEG,SAJF,CAKEC,SALF,CAQIJ,KARJ,CAKEI,SALF,CAMEC,eANF,CAQIL,KARJ,CAMEK,eANF,CAOKC,IAPL,0BAQIN,KARJ,YAUA,GAAMO,CAAAA,OAAO,CAAGlB,SAAS,EAAzB,CAEA,mBACE,yCAAK,SAAS,CAAEJ,IAAI,CAAC,WAAD,CAAcsB,OAAO,CAAChB,IAAtB,CAA4BY,SAA5B,CAApB,EAAgEG,IAAhE,6BACE,KAAC,IAAD,gBACE,SAAS,CAAC,iBADZ,CAEE,IAAI,CAAC,OAFP,CAGE,aAAa,CAAEJ,aAHjB,CAIE,aAAa,CAAED,KAJjB,EAKMG,SALN,EADF,cAQE,KAAC,UAAD,8BACE,MAAM,KADR,CAEE,OAAO,CAAC,WAFV,CAGE,KAAK,CAAC,aAHR,CAIE,SAAS,CAAEnB,IAAI,CAAC,uBAAD,CAA0BsB,OAAO,CAACX,KAAlC,CAJjB,EAKMS,eALN,eAOGT,KAPH,GARF,IADF,CAoBD,CAjCD,CAmCAG,QAAQ,CAACS,YAAT,CAAwB,CACtBJ,SAAS,CAAE,EADW,CAEtBC,eAAe,CAAE,EAFK,CAAxB,CAgCA,cAAeN,CAAAA,QAAf","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport { Icon } from 'components/atoms';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'inline-flex',\n    flexWrap: 'nowrap',\n    alignItems: 'center',\n    width: '100%',\n  },\n  title: {\n    marginLeft: theme.spacing(1),\n  },\n}));\n\n/**\n * Component to display the icon text\n *\n * @param {Object} props\n */\nconst IconText = props => {\n  const {\n    title,\n    color,\n    fontIconClass,\n    className,\n    iconProps,\n    typographyProps,\n    ...rest\n  } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div className={clsx('icon-text', classes.root, className)} {...rest}>\n      <Icon\n        className=\"icon-text__icon\"\n        size=\"small\"\n        fontIconClass={fontIconClass}\n        fontIconColor={color}\n        {...iconProps}\n      />\n      <Typography\n        noWrap\n        variant=\"subtitle1\"\n        color=\"textPrimary\"\n        className={clsx('icon-text__typography', classes.title)}\n        {...typographyProps}\n      >\n        {title}\n      </Typography>\n    </div>\n  );\n};\n\nIconText.defaultProps = {\n  iconProps: {},\n  typographyProps: {},\n};\n\nIconText.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n  /**\n   * The classes of the font icon\n   */\n  fontIconClass: PropTypes.string.isRequired,\n  /**\n   * Source set for the responsive images\n   */\n  color: PropTypes.string,\n  /**\n   * Title of the icon-text\n   */\n  title: PropTypes.string.isRequired,\n  /**\n   * Additional properties to pass to the Icon component\n   */\n  iconProps: PropTypes.object,\n  /**\n   * Additional properties to pass to the Typography component\n   */\n  typographyProps: PropTypes.object,\n};\n\nexport default IconText;\n"]},"metadata":{},"sourceType":"module"}