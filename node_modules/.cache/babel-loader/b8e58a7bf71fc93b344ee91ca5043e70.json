{"ast":null,"code":"import _objectSpread from\"C:/Users/HP/Desktop/React App/theFront-v3.2.2/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"C:/Users/HP/Desktop/React App/theFront-v3.2.2/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";var _excluded=[\"data\",\"className\"];import React from'react';import{makeStyles}from'@material-ui/core/styles';import{Grid,Typography}from'@material-ui/core';import{IconAlternate,SectionHeader}from'components/molecules';import{DescriptionListIcon,CardBase}from'components/organisms';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=makeStyles(function(theme){return{answerCount:{padding:theme.spacing(1/2,1),borderRadius:theme.spacing(1),background:theme.palette.secondary.light,color:'white',fontWeight:700,marginTop:theme.spacing(2)}};});var Categories=function Categories(props){var data=props.data,className=props.className,rest=_objectWithoutProperties(props,_excluded);var classes=useStyles();return/*#__PURE__*/_jsxs(\"div\",_objectSpread(_objectSpread({className:className},rest),{},{children:[/*#__PURE__*/_jsx(SectionHeader,{title:\"Related Help Center Categories\",subtitle:\"If you didn\\u2019t find what you needed, these could help!\",align:\"left\"}),/*#__PURE__*/_jsx(Grid,{container:true,spacing:2,children:data.map(function(item,index){return/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:12,md:4,children:/*#__PURE__*/_jsxs(CardBase,{liftUp:true,variant:\"outlined\",style:{borderTop:\"5px solid \".concat(item.color[500])},children:[/*#__PURE__*/_jsx(DescriptionListIcon,{icon:/*#__PURE__*/_jsx(IconAlternate,{fontIconClass:item.icon,color:item.color,shape:\"circle\",size:\"medium\"}),title:item.title,subtitle:item.subtitle}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",className:classes.answerCount,children:\"8 answers\"})]})},index);})})]}));};export default Categories;","map":{"version":3,"sources":["C:/Users/HP/Desktop/React App/theFront-v3.2.2/react-scripts/src/views/HelpCenterArticle/components/Categories/Categories.js"],"names":["React","makeStyles","Grid","Typography","IconAlternate","SectionHeader","DescriptionListIcon","CardBase","useStyles","theme","answerCount","padding","spacing","borderRadius","background","palette","secondary","light","color","fontWeight","marginTop","Categories","props","data","className","rest","classes","map","item","index","borderTop","icon","title","subtitle"],"mappings":"0ZAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,UAAT,KAA2B,0BAA3B,CACA,OAASC,IAAT,CAAeC,UAAf,KAAiC,mBAAjC,CACA,OAASC,aAAT,CAAwBC,aAAxB,KAA6C,sBAA7C,CACA,OAASC,mBAAT,CAA8BC,QAA9B,KAA8C,sBAA9C,C,wFAEA,GAAMC,CAAAA,SAAS,CAAGP,UAAU,CAAC,SAAAQ,KAAK,QAAK,CACrCC,WAAW,CAAE,CACXC,OAAO,CAAEF,KAAK,CAACG,OAAN,CAAc,EAAI,CAAlB,CAAqB,CAArB,CADE,CAEXC,YAAY,CAAEJ,KAAK,CAACG,OAAN,CAAc,CAAd,CAFH,CAGXE,UAAU,CAAEL,KAAK,CAACM,OAAN,CAAcC,SAAd,CAAwBC,KAHzB,CAIXC,KAAK,CAAE,OAJI,CAKXC,UAAU,CAAE,GALD,CAMXC,SAAS,CAAEX,KAAK,CAACG,OAAN,CAAc,CAAd,CANA,CADwB,CAAL,EAAN,CAA5B,CAWA,GAAMS,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAAC,KAAK,CAAI,CAC1B,GAAQC,CAAAA,IAAR,CAAqCD,KAArC,CAAQC,IAAR,CAAcC,SAAd,CAAqCF,KAArC,CAAcE,SAAd,CAA4BC,IAA5B,0BAAqCH,KAArC,YACA,GAAMI,CAAAA,OAAO,CAAGlB,SAAS,EAAzB,CACA,mBACE,yCAAK,SAAS,CAAEgB,SAAhB,EAA+BC,IAA/B,6BACE,KAAC,aAAD,EACE,KAAK,CAAC,gCADR,CAEE,QAAQ,CAAC,4DAFX,CAGE,KAAK,CAAC,MAHR,EADF,cAME,KAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,OAAO,CAAE,CAAzB,UACGF,IAAI,CAACI,GAAL,CAAS,SAACC,IAAD,CAAOC,KAAP,qBACR,KAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,CAAmB,EAAE,CAAE,EAAvB,CAA2B,EAAE,CAAE,CAA/B,uBACE,MAAC,QAAD,EACE,MAAM,KADR,CAEE,OAAO,CAAC,UAFV,CAGE,KAAK,CAAE,CAAEC,SAAS,qBAAeF,IAAI,CAACV,KAAL,CAAW,GAAX,CAAf,CAAX,CAHT,wBAKE,KAAC,mBAAD,EACE,IAAI,cACF,KAAC,aAAD,EACE,aAAa,CAAEU,IAAI,CAACG,IADtB,CAEE,KAAK,CAAEH,IAAI,CAACV,KAFd,CAGE,KAAK,CAAC,QAHR,CAIE,IAAI,CAAC,QAJP,EAFJ,CASE,KAAK,CAAEU,IAAI,CAACI,KATd,CAUE,QAAQ,CAAEJ,IAAI,CAACK,QAVjB,EALF,cAiBE,KAAC,UAAD,EAAY,OAAO,CAAC,OAApB,CAA4B,SAAS,CAAEP,OAAO,CAAChB,WAA/C,uBAjBF,GADF,EAAuCmB,KAAvC,CADQ,EAAT,CADH,EANF,IADF,CAoCD,CAvCD,CAoDA,cAAeR,CAAAA,UAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Typography } from '@material-ui/core';\nimport { IconAlternate, SectionHeader } from 'components/molecules';\nimport { DescriptionListIcon, CardBase } from 'components/organisms';\n\nconst useStyles = makeStyles(theme => ({\n  answerCount: {\n    padding: theme.spacing(1 / 2, 1),\n    borderRadius: theme.spacing(1),\n    background: theme.palette.secondary.light,\n    color: 'white',\n    fontWeight: 700,\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst Categories = props => {\n  const { data, className, ...rest } = props;\n  const classes = useStyles();\n  return (\n    <div className={className} {...rest}>\n      <SectionHeader\n        title=\"Related Help Center Categories\"\n        subtitle=\"If you didnâ€™t find what you needed, these could help!\"\n        align=\"left\"\n      />\n      <Grid container spacing={2}>\n        {data.map((item, index) => (\n          <Grid item xs={12} sm={12} md={4} key={index}>\n            <CardBase\n              liftUp\n              variant=\"outlined\"\n              style={{ borderTop: `5px solid ${item.color[500]}` }}\n            >\n              <DescriptionListIcon\n                icon={\n                  <IconAlternate\n                    fontIconClass={item.icon}\n                    color={item.color}\n                    shape=\"circle\"\n                    size=\"medium\"\n                  />\n                }\n                title={item.title}\n                subtitle={item.subtitle}\n              />\n              <Typography variant=\"body1\" className={classes.answerCount}>\n                8 answers\n              </Typography>\n            </CardBase>\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n};\n\nCategories.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n  /**\n   * data to be rendered\n   */\n  data: PropTypes.array.isRequired,\n};\n\nexport default Categories;\n"]},"metadata":{},"sourceType":"module"}