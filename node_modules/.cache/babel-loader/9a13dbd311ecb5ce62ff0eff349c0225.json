{"ast":null,"code":"import _objectSpread from\"C:/Users/HP/Desktop/React App/theFront-v3.2.2/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"C:/Users/HP/Desktop/React App/theFront-v3.2.2/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";var _excluded=[\"iconProps\",\"fontIconClass\",\"size\",\"color\",\"shape\",\"className\"];import React from'react';import clsx from'clsx';import{makeStyles}from'@material-ui/core/styles';import{Avatar,colors}from'@material-ui/core';import{Icon}from'components/atoms';import{jsx as _jsx}from\"react/jsx-runtime\";var useStyles=makeStyles(function(theme){return{extraSmall:{width:20,height:20},small:{width:50,height:50},medium:{width:70,height:70},large:{width:90,height:90},circle:{borderRadius:'100%'},square:{borderRadius:theme.spacing(2)}};});/**\n * Component to display the alternate icon\n *\n * @param {Object} props\n */var IconAlternate=function IconAlternate(props){var iconProps=props.iconProps,fontIconClass=props.fontIconClass,size=props.size,color=props.color,shape=props.shape,className=props.className,rest=_objectWithoutProperties(props,_excluded);var classes=useStyles();var useBackgroundStyles=makeStyles(function(){return{background:{background:color[50]}};});var backgroundClasses=useBackgroundStyles();return/*#__PURE__*/_jsx(Avatar,_objectSpread(_objectSpread({className:clsx('icon-alternate',classes[size],classes[shape],backgroundClasses.background,className)},rest),{},{children:/*#__PURE__*/_jsx(Icon,_objectSpread({size:size,fontIconClass:fontIconClass,fontIconColor:color[500],className:\"icon-alternate__icon\"},iconProps))}));};IconAlternate.defaultProps={size:'medium',shape:'square',iconProps:{}};export default IconAlternate;","map":{"version":3,"sources":["C:/Users/HP/Desktop/React App/theFront-v3.2.2/react-scripts/src/components/molecules/IconAlternate/IconAlternate.js"],"names":["React","clsx","makeStyles","Avatar","colors","Icon","useStyles","theme","extraSmall","width","height","small","medium","large","circle","borderRadius","square","spacing","IconAlternate","props","iconProps","fontIconClass","size","color","shape","className","rest","classes","useBackgroundStyles","background","backgroundClasses","defaultProps"],"mappings":"scAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,IAAP,KAAiB,MAAjB,CAEA,OAASC,UAAT,KAA2B,0BAA3B,CACA,OAASC,MAAT,CAAiBC,MAAjB,KAA+B,mBAA/B,CACA,OAASC,IAAT,KAAqB,kBAArB,C,2CAEA,GAAMC,CAAAA,SAAS,CAAGJ,UAAU,CAAC,SAAAK,KAAK,QAAK,CACrCC,UAAU,CAAE,CACVC,KAAK,CAAE,EADG,CAEVC,MAAM,CAAE,EAFE,CADyB,CAKrCC,KAAK,CAAE,CACLF,KAAK,CAAE,EADF,CAELC,MAAM,CAAE,EAFH,CAL8B,CASrCE,MAAM,CAAE,CACNH,KAAK,CAAE,EADD,CAENC,MAAM,CAAE,EAFF,CAT6B,CAarCG,KAAK,CAAE,CACLJ,KAAK,CAAE,EADF,CAELC,MAAM,CAAE,EAFH,CAb8B,CAiBrCI,MAAM,CAAE,CACNC,YAAY,CAAE,MADR,CAjB6B,CAoBrCC,MAAM,CAAE,CACND,YAAY,CAAER,KAAK,CAACU,OAAN,CAAc,CAAd,CADR,CApB6B,CAAL,EAAN,CAA5B,CAyBA;AACA;AACA;AACA;AACA,GACA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,KAAK,CAAI,CAC7B,GACEC,CAAAA,SADF,CAQID,KARJ,CACEC,SADF,CAEEC,aAFF,CAQIF,KARJ,CAEEE,aAFF,CAGEC,IAHF,CAQIH,KARJ,CAGEG,IAHF,CAIEC,KAJF,CAQIJ,KARJ,CAIEI,KAJF,CAKEC,KALF,CAQIL,KARJ,CAKEK,KALF,CAMEC,SANF,CAQIN,KARJ,CAMEM,SANF,CAOKC,IAPL,0BAQIP,KARJ,YAUA,GAAMQ,CAAAA,OAAO,CAAGrB,SAAS,EAAzB,CACA,GAAMsB,CAAAA,mBAAmB,CAAG1B,UAAU,CAAC,iBAAO,CAC5C2B,UAAU,CAAE,CACVA,UAAU,CAAEN,KAAK,CAAC,EAAD,CADP,CADgC,CAAP,EAAD,CAAtC,CAKA,GAAMO,CAAAA,iBAAiB,CAAGF,mBAAmB,EAA7C,CAEA,mBACE,KAAC,MAAD,8BACE,SAAS,CAAE3B,IAAI,CACb,gBADa,CAEb0B,OAAO,CAACL,IAAD,CAFM,CAGbK,OAAO,CAACH,KAAD,CAHM,CAIbM,iBAAiB,CAACD,UAJL,CAKbJ,SALa,CADjB,EAQMC,IARN,4BAUE,KAAC,IAAD,gBACE,IAAI,CAAEJ,IADR,CAEE,aAAa,CAAED,aAFjB,CAGE,aAAa,CAAEE,KAAK,CAAC,GAAD,CAHtB,CAIE,SAAS,CAAC,sBAJZ,EAKMH,SALN,EAVF,GADF,CAoBD,CAvCD,CAyCAF,aAAa,CAACa,YAAd,CAA6B,CAC3BT,IAAI,CAAE,QADqB,CAE3BE,KAAK,CAAE,QAFoB,CAG3BJ,SAAS,CAAE,EAHgB,CAA7B,CAqDA,cAAeF,CAAAA,aAAf","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Avatar, colors } from '@material-ui/core';\nimport { Icon } from 'components/atoms';\n\nconst useStyles = makeStyles(theme => ({\n  extraSmall: {\n    width: 20,\n    height: 20,\n  },\n  small: {\n    width: 50,\n    height: 50,\n  },\n  medium: {\n    width: 70,\n    height: 70,\n  },\n  large: {\n    width: 90,\n    height: 90,\n  },\n  circle: {\n    borderRadius: '100%',\n  },\n  square: {\n    borderRadius: theme.spacing(2),\n  },\n}));\n\n/**\n * Component to display the alternate icon\n *\n * @param {Object} props\n */\nconst IconAlternate = props => {\n  const {\n    iconProps,\n    fontIconClass,\n    size,\n    color,\n    shape,\n    className,\n    ...rest\n  } = props;\n\n  const classes = useStyles();\n  const useBackgroundStyles = makeStyles(() => ({\n    background: {\n      background: color[50],\n    },\n  }));\n  const backgroundClasses = useBackgroundStyles();\n\n  return (\n    <Avatar\n      className={clsx(\n        'icon-alternate',\n        classes[size],\n        classes[shape],\n        backgroundClasses.background,\n        className,\n      )}\n      {...rest}\n    >\n      <Icon\n        size={size}\n        fontIconClass={fontIconClass}\n        fontIconColor={color[500]}\n        className=\"icon-alternate__icon\"\n        {...iconProps}\n      />\n    </Avatar>\n  );\n};\n\nIconAlternate.defaultProps = {\n  size: 'medium',\n  shape: 'square',\n  iconProps: {},\n};\n\nIconAlternate.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n  /**\n   * The classes of the font icon\n   */\n  fontIconClass: PropTypes.string.isRequired,\n  /**\n   * Sizes of the icon\n   */\n  size: PropTypes.oneOf(['extraSmall', 'small', 'medium', 'large']),\n  /**\n   * Color of the icon\n   */\n  color: PropTypes.oneOf([\n    colors.red,\n    colors.pink,\n    colors.purple,\n    colors.deepPurple,\n    colors.indigo,\n    colors.blue,\n    colors.lightBlue,\n    colors.cyan,\n    colors.teal,\n    colors.green,\n    colors.lightGreen,\n    colors.lime,\n    colors.yellow,\n    colors.amber,\n    colors.orange,\n    colors.deepOrange,\n    colors.brown,\n    colors.grey,\n    colors.blueGrey,\n  ]),\n  /**\n   * The shape of the alternate icon\n   */\n  shape: PropTypes.oneOf(['circle', 'square']),\n  /**\n   * Additional properties to pass to the Icon component\n   */\n  iconProps: PropTypes.object,\n};\n\nexport default IconAlternate;\n"]},"metadata":{},"sourceType":"module"}