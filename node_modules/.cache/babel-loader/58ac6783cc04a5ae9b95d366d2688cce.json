{"ast":null,"code":"import _objectSpread from\"C:/Users/HP/Desktop/React App/theFront-v3.2.2/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"C:/Users/HP/Desktop/React App/theFront-v3.2.2/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";var _excluded=[\"fontIconClass\",\"color\",\"title\",\"subtitle\",\"href\",\"align\",\"className\",\"iconAlternateProps\",\"titleProps\",\"subtitleProps\"];import React from'react';import clsx from'clsx';import{makeStyles}from'@material-ui/core/styles';import{Grid,Typography,colors,IconButton}from'@material-ui/core';import ArrowRightAltIcon from'@material-ui/icons/ArrowRightAlt';import{IconAlternate}from'components/molecules';import{CardBase}from'components/organisms';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var useStyles=makeStyles(function(theme){return{root:{height:'100%',width:'100%'},fontWeight700:{fontWeight:700},categoryIconButton:{display:'flex',width:'100%',justifyContent:'flex-end'}};});/**\n * Component to display the category link card\n *\n * @param {Object} props\n */var CardCategoryLink=function CardCategoryLink(props){var fontIconClass=props.fontIconClass,color=props.color,title=props.title,subtitle=props.subtitle,href=props.href,align=props.align,className=props.className,iconAlternateProps=props.iconAlternateProps,titleProps=props.titleProps,subtitleProps=props.subtitleProps,rest=_objectWithoutProperties(props,_excluded);var classes=useStyles();var justifyGrid='flex-start';if(align==='center'){justifyGrid='center';}else if(align==='right'){justifyGrid='flex-end';}return/*#__PURE__*/_jsx(CardBase,_objectSpread(_objectSpread({className:clsx('card-category-link',classes.root,className)},rest),{},{children:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,className:\"card-category-link__wrapper\",children:[/*#__PURE__*/_jsx(Grid,{item:true,container:true,justify:justifyGrid,xs:12,children:/*#__PURE__*/_jsx(IconAlternate,_objectSpread({fontIconClass:fontIconClass,color:color,size:\"medium\"},iconAlternateProps))}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Typography,_objectSpread(_objectSpread({variant:\"h6\",align:align,className:classes.fontWeight700},titleProps),{},{children:title}))}),subtitle&&/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Typography,_objectSpread(_objectSpread({variant:\"subtitle1\",align:align,color:\"textSecondary\"},subtitleProps),{},{children:subtitle}))})]}),/*#__PURE__*/_jsx(\"a\",{href:href,className:clsx('card-category-link__item',classes.categoryIconButton),children:/*#__PURE__*/_jsx(IconButton,{className:\"card-category-link__icon-button\",children:/*#__PURE__*/_jsx(ArrowRightAltIcon,{className:\"card-category-link__icon\",style:{color:color[500]}})})})]})}));};CardCategoryLink.defaultProps={align:'left',href:'#',iconAlternateProps:{},titleProps:{},subtitleProps:{}};export default CardCategoryLink;","map":{"version":3,"sources":["C:/Users/HP/Desktop/React App/theFront-v3.2.2/react-scripts/src/components/organisms/CardCategoryLink/CardCategoryLink.js"],"names":["React","clsx","makeStyles","Grid","Typography","colors","IconButton","ArrowRightAltIcon","IconAlternate","CardBase","useStyles","theme","root","height","width","fontWeight700","fontWeight","categoryIconButton","display","justifyContent","CardCategoryLink","props","fontIconClass","color","title","subtitle","href","align","className","iconAlternateProps","titleProps","subtitleProps","rest","classes","justifyGrid","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Typography, colors, IconButton } from '@material-ui/core';\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt';\nimport { IconAlternate } from 'components/molecules';\nimport { CardBase } from 'components/organisms';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n    width: '100%',\n  },\n  fontWeight700: {\n    fontWeight: 700,\n  },\n  categoryIconButton: {\n    display: 'flex',\n    width: '100%',\n    justifyContent: 'flex-end',\n  },\n}));\n\n/**\n * Component to display the category link card\n *\n * @param {Object} props\n */\nconst CardCategoryLink = props => {\n  const {\n    fontIconClass,\n    color,\n    title,\n    subtitle,\n    href,\n    align,\n    className,\n    iconAlternateProps,\n    titleProps,\n    subtitleProps,\n    ...rest\n  } = props;\n\n  const classes = useStyles();\n\n  let justifyGrid = 'flex-start';\n  if (align === 'center') {\n    justifyGrid = 'center';\n  } else if (align === 'right') {\n    justifyGrid = 'flex-end';\n  }\n  return (\n    <CardBase\n      className={clsx('card-category-link', classes.root, className)}\n      {...rest}\n    >\n      <>\n      <Grid container spacing={2} className=\"card-category-link__wrapper\">\n        <Grid item container justify={justifyGrid} xs={12}>\n          <IconAlternate\n            fontIconClass={fontIconClass}\n            color={color}\n            size=\"medium\"\n            {...iconAlternateProps}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Typography\n            variant=\"h6\"\n            align={align}\n            className={classes.fontWeight700}\n            {...titleProps}\n          >\n            {title}\n          </Typography>\n        </Grid>\n        {subtitle && (\n          <Grid item xs={12}>\n            <Typography\n              variant=\"subtitle1\"\n              align={align}\n              color=\"textSecondary\"\n              {...subtitleProps}\n            >\n              {subtitle}\n            </Typography>\n          </Grid>\n        )}\n      </Grid>\n      <a\n        href={href}\n        className={clsx('card-category-link__item', classes.categoryIconButton)}\n      >\n        <IconButton className=\"card-category-link__icon-button\">\n          <ArrowRightAltIcon\n            className=\"card-category-link__icon\"\n            style={{ color: color[500] }}\n          />\n        </IconButton>\n      </a>\n      </>\n    </CardBase>\n  );\n};\n\nCardCategoryLink.defaultProps = {\n  align: 'left',\n  href: '#',\n  iconAlternateProps: {},\n  titleProps: {},\n  subtitleProps: {},\n};\n\nCardCategoryLink.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n  /**\n   * Promo title to show inside the card\n   */\n  title: PropTypes.string.isRequired,\n  /**\n   * Promo subtitle to show inside the card\n   */\n  subtitle: PropTypes.string,\n  /**\n   * Promo description to show inside the card\n   */\n  href: PropTypes.string.isRequired,\n  /**\n   * Promo font icon class name to show inside the card\n   */\n  fontIconClass: PropTypes.string,\n  /**\n   * Promo icon color to show inside the card\n   */\n  color: PropTypes.oneOf([\n    colors.red,\n    colors.pink,\n    colors.purple,\n    colors.deepPurple,\n    colors.indigo,\n    colors.blue,\n    colors.lightBlue,\n    colors.cyan,\n    colors.teal,\n    colors.green,\n    colors.lightGreen,\n    colors.lime,\n    colors.yellow,\n    colors.amber,\n    colors.orange,\n    colors.deepOrange,\n    colors.brown,\n    colors.grey,\n    colors.blueGrey,\n  ]).isRequired,\n  /**\n   * The content alignment\n   */\n  align: PropTypes.oneOf(['left', 'right', 'center']),\n  /**\n   * Additional props to pass to the IconAlternate component\n   */\n  iconAlternateProps: PropTypes.object,\n  /**\n   * Additional props to pass to the title Typography component\n   */\n  titleProps: PropTypes.object,\n  /**\n   * Additional props to pass to the subtitle Typography component\n   */\n  subtitleProps: PropTypes.object,\n};\n\nexport default CardCategoryLink;\n"]},"metadata":{},"sourceType":"module"}