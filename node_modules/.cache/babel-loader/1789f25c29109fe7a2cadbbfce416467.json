{"ast":null,"code":"import _objectSpread from\"C:/Users/HP/Desktop/React App/theFront-v3.2.2/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"C:/Users/HP/Desktop/React App/theFront-v3.2.2/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";var _excluded=[\"data\",\"className\"];import React from'react';import{makeStyles}from'@material-ui/core/styles';import{Grid,List,ListItem,ListItemAvatar,ListItemText}from'@material-ui/core';import{IconAlternate}from'components/molecules';import{Accordion}from'components/organisms';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=makeStyles(function(theme){return{title:{fontWeight:'bold'},accordionGrid:{'& .accordion__item-wrapper':{boxShadow:'0 1.5rem 4rem rgba(22,28,45,.05)'}},fontWeightBold:{fontWeight:'bold'},fontWeight300:{fontWeight:300},listItemAvatar:{marginRight:theme.spacing(2)},listItemText:{display:'flex',justifyContent:'space-between',alignItems:'center',flexWrap:'wrap'},answerCount:{padding:theme.spacing(1/2,1),borderRadius:theme.spacing(1),background:theme.palette.secondary.light,color:'white',fontWeight:700}};});var Questions=function Questions(props){var data=props.data,className=props.className,rest=_objectWithoutProperties(props,_excluded);var classes=useStyles();return/*#__PURE__*/_jsx(\"div\",_objectSpread(_objectSpread({className:className},rest),{},{children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsxs(List,{children:[/*#__PURE__*/_jsxs(ListItem,{disableGutters:true,children:[/*#__PURE__*/_jsx(ListItemAvatar,{className:classes.listItemAvatar,children:/*#__PURE__*/_jsx(IconAlternate,{fontIconClass:data.icon,size:\"medium\",color:data.color,shape:\"circle\"})}),/*#__PURE__*/_jsx(ListItemText,{primary:data.title,secondary:data.subtitle,primaryTypographyProps:{variant:'h6'},secondaryTypographyProps:{variant:'h6'}})]}),/*#__PURE__*/_jsx(ListItem,{disableGutters:true,children:/*#__PURE__*/_jsx(ListItemText,{className:classes.listItemText,primary:\"Last updated 2 weeks ago\",secondary:\"\".concat(data.items.length,\" answers\"),primaryTypographyProps:{variant:'subtitle1',color:'textSecondary'},secondaryTypographyProps:{variant:'body1',className:classes.answerCount}})})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,className:classes.accordionGrid,children:/*#__PURE__*/_jsx(Accordion,{items:data.items,titleProps:{variant:'subtitle1',className:classes.fontWeightBold},subtitleProps:{className:classes.fontWeight300}})})]})}));};export default Questions;","map":{"version":3,"sources":["C:/Users/HP/Desktop/React App/theFront-v3.2.2/react-scripts/src/views/HelpCenterArticle/components/Questions/Questions.js"],"names":["React","makeStyles","Grid","List","ListItem","ListItemAvatar","ListItemText","IconAlternate","Accordion","useStyles","theme","title","fontWeight","accordionGrid","boxShadow","fontWeightBold","fontWeight300","listItemAvatar","marginRight","spacing","listItemText","display","justifyContent","alignItems","flexWrap","answerCount","padding","borderRadius","background","palette","secondary","light","color","Questions","props","data","className","rest","classes","icon","subtitle","variant","items","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Grid,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n} from '@material-ui/core';\nimport { IconAlternate } from 'components/molecules';\nimport { Accordion } from 'components/organisms';\n\nconst useStyles = makeStyles(theme => ({\n  title: {\n    fontWeight: 'bold',\n  },\n  accordionGrid: {\n    '& .accordion__item-wrapper': {\n      boxShadow: '0 1.5rem 4rem rgba(22,28,45,.05)',\n    },\n  },\n  fontWeightBold: {\n    fontWeight: 'bold',\n  },\n  fontWeight300: {\n    fontWeight: 300,\n  },\n  listItemAvatar: {\n    marginRight: theme.spacing(2),\n  },\n  listItemText: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n  },\n  answerCount: {\n    padding: theme.spacing(1 / 2, 1),\n    borderRadius: theme.spacing(1),\n    background: theme.palette.secondary.light,\n    color: 'white',\n    fontWeight: 700,\n  },\n}));\n\nconst Questions = props => {\n  const { data, className, ...rest } = props;\n  const classes = useStyles();\n  return (\n    <div className={className} {...rest}>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <List>\n            <ListItem disableGutters>\n              <ListItemAvatar className={classes.listItemAvatar}>\n                <IconAlternate\n                  fontIconClass={data.icon}\n                  size=\"medium\"\n                  color={data.color}\n                  shape=\"circle\"\n                />\n              </ListItemAvatar>\n              <ListItemText\n                primary={data.title}\n                secondary={data.subtitle}\n                primaryTypographyProps={{\n                  variant: 'h6',\n                }}\n                secondaryTypographyProps={{\n                  variant: 'h6',\n                }}\n              />\n            </ListItem>\n            <ListItem disableGutters>\n              <ListItemText\n                className={classes.listItemText}\n                primary=\"Last updated 2 weeks ago\"\n                secondary={`${data.items.length} answers`}\n                primaryTypographyProps={{\n                  variant: 'subtitle1',\n                  color: 'textSecondary',\n                }}\n                secondaryTypographyProps={{\n                  variant: 'body1',\n                  className: classes.answerCount,\n                }}\n              />\n            </ListItem>\n          </List>\n        </Grid>\n        <Grid item xs={12} className={classes.accordionGrid}>\n          <Accordion\n            items={data.items}\n            titleProps={{\n              variant: 'subtitle1',\n              className: classes.fontWeightBold,\n            }}\n            subtitleProps={{\n              className: classes.fontWeight300,\n            }}\n          />\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nQuestions.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n  /**\n   * data to be rendered\n   */\n  data: PropTypes.object.isRequired,\n};\n\nexport default Questions;\n"]},"metadata":{},"sourceType":"module"}