{"ast":null,"code":"import _objectSpread from\"C:/Users/HP/Desktop/React App/theFront-v3.2.2/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"C:/Users/HP/Desktop/React App/theFront-v3.2.2/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";var _excluded=[\"data\",\"className\"];import React from'react';import{useTheme}from'@material-ui/core/styles';import{useMediaQuery,Grid,Typography}from'@material-ui/core';import{SectionHeader}from'components/molecules';import{CardCategoryLink}from'components/organisms';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Categories=function Categories(props){var data=props.data,className=props.className,rest=_objectWithoutProperties(props,_excluded);var theme=useTheme();var isMd=useMediaQuery(theme.breakpoints.up('md'),{defaultMatches:true});return/*#__PURE__*/_jsxs(\"div\",_objectSpread(_objectSpread({className:className},rest),{},{children:[/*#__PURE__*/_jsx(SectionHeader,{title:/*#__PURE__*/_jsxs(\"span\",{children:[\"Choose your course by\",' ',/*#__PURE__*/_jsx(Typography,{color:\"secondary\",variant:\"inherit\",component:\"span\",children:\"categories\"})]}),subtitle:\"Browse the available course categories, choose your favourite one and start learning.\",fadeUp:true}),/*#__PURE__*/_jsx(Grid,{container:true,spacing:isMd?4:2,children:data.map(function(item,index){return/*#__PURE__*/_jsx(Grid,{item:true,container:true,alignItems:\"center\",direction:\"column\",xs:12,sm:6,md:3,\"data-aos\":\"fade-up\",children:/*#__PURE__*/_jsx(CardCategoryLink,{variant:\"outlined\",align:isMd?'left':'center',liftUp:true,title:item.title,subtitle:item.subtitle,href:\"#\",fontIconClass:item.icon,color:item.color})},index);})})]}));};export default Categories;","map":{"version":3,"sources":["C:/Users/HP/Desktop/React App/theFront-v3.2.2/react-scripts/src/views/Elearning/components/Categories/Categories.js"],"names":["React","useTheme","useMediaQuery","Grid","Typography","SectionHeader","CardCategoryLink","Categories","props","data","className","rest","theme","isMd","breakpoints","up","defaultMatches","map","item","index","title","subtitle","icon","color"],"mappings":"0ZAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,QAAT,KAAyB,0BAAzB,CACA,OAASC,aAAT,CAAwBC,IAAxB,CAA8BC,UAA9B,KAAgD,mBAAhD,CACA,OAASC,aAAT,KAA8B,sBAA9B,CACA,OAASC,gBAAT,KAAiC,sBAAjC,C,wFAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAAC,KAAK,CAAI,CAC1B,GAAQC,CAAAA,IAAR,CAAqCD,KAArC,CAAQC,IAAR,CAAcC,SAAd,CAAqCF,KAArC,CAAcE,SAAd,CAA4BC,IAA5B,0BAAqCH,KAArC,YAEA,GAAMI,CAAAA,KAAK,CAAGX,QAAQ,EAAtB,CACA,GAAMY,CAAAA,IAAI,CAAGX,aAAa,CAACU,KAAK,CAACE,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,CAA6B,CACrDC,cAAc,CAAE,IADqC,CAA7B,CAA1B,CAIA,mBACE,yCAAK,SAAS,CAAEN,SAAhB,EAA+BC,IAA/B,6BACE,KAAC,aAAD,EACE,KAAK,cACH,gDACwB,GADxB,cAEE,KAAC,UAAD,EAAY,KAAK,CAAC,WAAlB,CAA8B,OAAO,CAAC,SAAtC,CAAgD,SAAS,CAAC,MAA1D,wBAFF,GAFJ,CAOE,QAAQ,CAAC,uFAPX,CAQE,MAAM,KARR,EADF,cAWE,KAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,OAAO,CAAEE,IAAI,CAAG,CAAH,CAAO,CAApC,UACGJ,IAAI,CAACQ,GAAL,CAAS,SAACC,IAAD,CAAOC,KAAP,qBACR,KAAC,IAAD,EAEE,IAAI,KAFN,CAGE,SAAS,KAHX,CAIE,UAAU,CAAC,QAJb,CAKE,SAAS,CAAC,QALZ,CAME,EAAE,CAAE,EANN,CAOE,EAAE,CAAE,CAPN,CAQE,EAAE,CAAE,CARN,CASE,WAAS,SATX,uBAWE,KAAC,gBAAD,EACE,OAAO,CAAC,UADV,CAEE,KAAK,CAAEN,IAAI,CAAG,MAAH,CAAY,QAFzB,CAGE,MAAM,KAHR,CAIE,KAAK,CAAEK,IAAI,CAACE,KAJd,CAKE,QAAQ,CAAEF,IAAI,CAACG,QALjB,CAME,IAAI,CAAC,GANP,CAOE,aAAa,CAAEH,IAAI,CAACI,IAPtB,CAQE,KAAK,CAAEJ,IAAI,CAACK,KARd,EAXF,EACOJ,KADP,CADQ,EAAT,CADH,EAXF,IADF,CAwCD,CAhDD,CA6DA,cAAeZ,CAAAA,UAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTheme } from '@material-ui/core/styles';\nimport { useMediaQuery, Grid, Typography } from '@material-ui/core';\nimport { SectionHeader } from 'components/molecules';\nimport { CardCategoryLink } from 'components/organisms';\n\nconst Categories = props => {\n  const { data, className, ...rest } = props;\n\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up('md'), {\n    defaultMatches: true,\n  });\n\n  return (\n    <div className={className} {...rest}>\n      <SectionHeader\n        title={\n          <span>\n            Choose your course by{' '}\n            <Typography color=\"secondary\" variant=\"inherit\" component=\"span\">categories</Typography>\n          </span>\n        }\n        subtitle=\"Browse the available course categories, choose your favourite one and start learning.\"\n        fadeUp\n      />\n      <Grid container spacing={isMd ? 4 : 2}>\n        {data.map((item, index) => (\n          <Grid\n            key={index}\n            item\n            container\n            alignItems=\"center\"\n            direction=\"column\"\n            xs={12}\n            sm={6}\n            md={3}\n            data-aos=\"fade-up\"\n          >\n            <CardCategoryLink\n              variant=\"outlined\"\n              align={isMd ? 'left' : 'center'}\n              liftUp\n              title={item.title}\n              subtitle={item.subtitle}\n              href=\"#\"\n              fontIconClass={item.icon}\n              color={item.color}\n            />\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n};\n\nCategories.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n  /**\n   * data to be rendered\n   */\n  data: PropTypes.array.isRequired,\n};\n\nexport default Categories;\n"]},"metadata":{},"sourceType":"module"}